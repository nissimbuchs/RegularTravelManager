{
  "name": "regular-travel-manager",
  "version": "1.0.0",
  "private": true,
  "description": "RegularTravelManager - Employee travel allowance management system",
  "workspaces": [
    "apps/*",
    "domains/*",
    "packages/*",
    "infrastructure"
  ],
  "scripts": {
    "build": "npm-run-all build:packages build:domains build:apps build:infrastructure",

    "build:frontend": "npm run build --workspace=apps/web",

    "deploy:dev": "npm run build && npm run deploy:dev --workspace=infrastructure",
    "deploy:staging": "npm run build && npm run deploy:staging --workspace=infrastructure",
    "deploy:production": "npm run build && npm run deploy:production --workspace=infrastructure",

    "deploy:frontend:dev": "npm run build:frontend && npm run deploy:web:dev --workspace=infrastructure",
    "deploy:frontend:staging": "npm run build:frontend && npm run deploy:web:staging --workspace=infrastructure",
    "deploy:frontend:production": "npm run build:frontend && npm run deploy:web:production --workspace=infrastructure",

    "deploy:safe:dev": "./scripts/deployment-health-check.sh dev && npm run deploy:dev",
    "deploy:safe:staging": "./scripts/deployment-health-check.sh staging && npm run deploy:staging",
    "deploy:safe:production": "./scripts/deployment-health-check.sh production && npm run deploy:production",
    
    "destroy:clean:dev": "npm run destroy:dev --workspace=infrastructure && ./scripts/cleanup-log-groups.sh dev",
    "destroy:clean:staging": "npm run destroy:staging --workspace=infrastructure && ./scripts/cleanup-log-groups.sh staging",
    "destroy:clean:production": "npm run destroy:production --workspace=infrastructure && ./scripts/cleanup-log-groups.sh production",
    
    "health:check:dev": "./scripts/deployment-health-check.sh dev",
    "health:check:staging": "./scripts/deployment-health-check.sh staging",
    "health:check:production": "./scripts/deployment-health-check.sh production",
    
    "cleanup:logs:dev": "./scripts/cleanup-log-groups.sh dev",
    "cleanup:logs:staging": "./scripts/cleanup-log-groups.sh staging",
    "cleanup:logs:production": "./scripts/cleanup-log-groups.sh production",
    
    "sync:web:dev": "./scripts/generate-web-config.sh dev",
    "sync:web:staging": "./scripts/generate-web-config.sh staging", 
    "sync:web:production": "./scripts/generate-web-config.sh production",
    
    "test": "npm run test --workspaces --if-present",
    "lint": "eslint . --ext .ts,.js,.tsx,.jsx --fix",
    "format": "prettier --write \"**/*.{ts,js,tsx,jsx,json,md}\"",
    "clean": "npm run clean --workspaces --if-present && rm -rf node_modules/.cache && find . -name \"tsconfig.tsbuildinfo\" -delete",

    "infrastructure:validate": "node scripts/infrastructure-validator.js",
    "infrastructure:plan": "cd infrastructure && npm run diff",
    "infrastructure:generate": "node scripts/generate-feature-infrastructure.js",
    "story:start": "node scripts/story-infrastructure-checker.js",
    "story:complete": "npm run infrastructure:validate && npm run infrastructure:plan",
    "clean:all": "npm run clean:docker && npm run clean:build && npm run clean:deps && npm run clean:cache && echo 'âœ… Complete cleanup finished. Next steps: npm install && npm run build && npm run dev:setup'",
    "clean:docker": "docker compose down -v --remove-orphans && docker system prune -f",
    "clean:deps": "find . -name 'node_modules' -type d -exec rm -rf {} + 2>/dev/null || true && find . -name 'package-lock.json' -delete 2>/dev/null || true",
    "clean:build": "rm -rf packages/*/dist domains/*/dist apps/*/dist infrastructure/cdk.out apps/web/.angular && find . -name '*.tsbuildinfo' -delete",
    "clean:cache": "rm -rf node_modules/.cache ~/.npm/_cacache .eslintcache .prettiercache 2>/dev/null || true",

    "start:local": "RTM_ENVIRONMENT=local npm-run-all --parallel start:local:api start:local:web",
    "start:local:api": "RTM_ENVIRONMENT=local npm run dev --workspace=apps/api",
    "start:local:web": "RTM_ENVIRONMENT=local npm run dev --workspace=apps/web",

    "env:local": "docker compose up -d",
    "env:local:setup": "npm run env:local && ./scripts/setup-development.sh",
    "env:local:logs": "docker compose logs -f",
    "env:local:clean": "docker compose down -v --remove-orphans",
    "env:local:restart": "npm run env:local:clean && npm run env:local:setup",

    "setup:local": "npm run env:local:setup",

    "build:packages": "tsc --build packages/shared",
    "build:domains": "tsc --build domains/travel-allowance domains/employee-management domains/project-management",
    "build:apps": "npm run build --workspace=apps/api --workspace=apps/web",
    "build:infrastructure": "npm run build --workspace=infrastructure",

    "db:setup:local": "npm run db:migrate:local && npm run db:seed:local",
    "db:migrate:local": "cd apps/api && DATABASE_URL=postgresql://nissim:devpass123@localhost:5432/travel_manager_dev npm run db:migrate",
    "db:seed:local": "cd apps/api && DATABASE_URL=postgresql://nissim:devpass123@localhost:5432/travel_manager_dev npm run db:sample-data",
    "db:reset:local": "npm run env:local:clean && npm run env:local && npm run db:setup:local",
    "db:validate:local": "cd apps/api && DATABASE_URL=postgresql://nissim:devpass123@localhost:5432/travel_manager_dev npm run db:validate",
    "db:status:local": "cd apps/api && DATABASE_URL=postgresql://nissim:devpass123@localhost:5432/travel_manager_dev npm run db:status",


    "test:local": "npm run test --workspaces --if-present",
    "test:integration:local": "npm run test:integration --workspace=apps/api",
    "test:e2e:local": "npm run test:e2e --workspace=apps/web",


    "aws:local:init": "chmod +x localstack/init/*.sh && for script in localstack/init/*.sh; do echo \"Running $script...\"; $script; done",
    "aws:local:status": "curl -s http://localhost:4566/_localstack/health | jq .",
    "aws:local:start": "npm run env:local && npm run aws:local:init"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^8.0.3",
    "lint-staged": "^14.0.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.0.0",
    "typescript": "^5.3.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "travel-management",
    "employee-allowance",
    "angular",
    "nodejs",
    "aws-cdk",
    "typescript"
  ],
  "author": "Development Team",
  "license": "UNLICENSED",
  "dependencies": {
    "ESlint": "npm:eslint@^8.57.1"
  }
}
